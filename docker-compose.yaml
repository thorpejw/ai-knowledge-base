services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      retries: 5
      start_period: 5s
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - uploads:${FILE_STORAGE_DIR}

  ingest_api:
    build:
      context: .
      dockerfile: apps/ingest-api/Dockerfile
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - uploads:${FILE_STORAGE_DIR}

  websocket:
    build:
      context: .
      dockerfile: apps/websocket-server/Dockerfile
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3001:3001"

  worker:
    build: 
      context: .
      dockerfile: apps/worker/Dockerfile
    env_file: .env
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - uploads:${FILE_STORAGE_DIR}

volumes:
  pgdata:
  uploads:
